import { server } from '@/services/api.endpoint'

export function getImage (Id) {
  if (Id) {
    return server.get(`/api/images/${Id}`)
  } else {
    console.error('Id is not provided for getImage')
  }
}

export function uploadImage (image) {
  if (image) {
    var formData = new FormData()
    formData.append('image', image)
    // token currently is generated by postman, will upadte after user part is done
    formData.append('token', 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1MjE1ODc3MjAsImV4cCI6MTUyMTU5MTMyMH0.VZ3SOhs-pmEzET1TCKFnMDgHaiE-KEd0X8Sd7TbRn1c')
    // var token = this.$store.getters.token
    // formData.append('token', token)
    return server.put('/api/images', formData)
  } else {
    console.error('Image file is not provided for uploadImage')
  }
}

export function deleteImage (Id) {
  if (Id) {
    var token = {
      data: {
        // token: this.$store.getters.token
        // token currently is generated by postman, will upadte after user part is done
        token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1MjE1ODc3MjAsImV4cCI6MTUyMTU5MTMyMH0.VZ3SOhs-pmEzET1TCKFnMDgHaiE-KEd0X8Sd7TbRn1c'
      }
    }
    return server.delete(`/api/images/${Id}`, token)
  } else {
    console.error('Id is not provided for deleteImage')
  }
}
